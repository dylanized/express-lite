// setup

	var path = require("path"),
	 	fileHelper = require("peezy-file-helper"),
	 	_ = require("underscore");

	var ThemeEngine = {};
	
// initialize
	
	ThemeEngine.init = function(app, site, pages) {
		
		this.siteBase = app.siteBase;
		this.themesBase = path.join(app.siteBase, app.folders.themes);
		this.folder = app.folders.themes;
		
		this.appConfig = app;
		this.siteConfig = site;
		this.pages = pages;

		this.loadThemes();
	
	}
	
// load pages
	
	ThemeEngine.loadThemes = function() {
	
		var themes = fileHelper.getFolders(this.themesBase);	

		// for each theme
		for (var i = 0; i < themes.length; i++) {
		
			// if required files dont exist, delete from theme list
			var theme_config = path.join(this.themesBase, themes[i], "theme.json");
			var theme_index = path.join(this.themesBase, themes[i], "index.ejs");
		
			if (!fileHelper.exists([theme_config, theme_index])) themes.splice(i, 1);
		
		}
	
		this.themes = themes;	
	
	}
	
// set theme vars

	ThemeEngine.set = function(slug, query) {

		this.setPage(slug);
		this.setTheme(this.siteConfig.theme, query);
		this.setTemplate(slug, query);						
		this.buildLocals();			
	
	}	
	
// set status

	ThemeEngine.setPage = function(slug) {
		
		if (!this.pages[slug]) this.slug = this.siteConfig.error;
		else this.slug = slug;
		
		if (this.slug == this.siteConfig.error) this.status = 404;
		else this.status = 200;
		
		this.content = this.pages[this.slug].content;
	
	}
			
		// get status
	
// set theme

	ThemeEngine.setTheme = function(theme, query) {

		// theme override	
		if (query.theme && this.themes.indexOf(query.theme) > -1) theme = query.theme;
					
		// set vars
		this.theme = theme;
		this.themePath = "/" + this.folder + "/" + theme;
		this.themeBase = path.join(this.themesBase, theme);
		
		// load config
		this.themeConfig = require(path.join(this.themeBase, "theme.json"));

	}	

// get template

	ThemeEngine.setTemplate = function(slug, query) {

		// if inc override
		if (query.inc && this.templateExists(this.theme, "inc/" + query.inc)) this.template = "inc/" + query.inc;
		
		// else if query override
		else if (query.template && this.templateExists(this.theme, query.template)) this.template = query.template;
		
		// else if meta data
		
		// else if homepage
		
		// else default
		else this.template = "index";
		
		this.templateFile = this.template + ".ejs";

	}
		
// if template exists

	ThemeEngine.templateExists = function(theme, template) {
	
		var filepath = path.join(this.themesBase, theme, template + ".ejs");
		if (fileHelper.exists(filepath)) return true;
		else return false;
	
	}	
	
// build locals

	ThemeEngine.buildLocals = function(req_locals) {

		var locals = _.clone(this.siteConfig);
		
		// set page locals
		locals.slug = this.slug;
		locals.content = this.content;
		
		// set theme locals
		locals.theme = this.theme;
		locals.themePath = this.themePath;
		locals.template = this.template;
		locals.templateFile = this.templateFile;
		locals.status = this.status;
						
		// if child theme theme
		if (this.themeConfig.parent) {
			// set parent theme locals
			locals.parent = this.themeConfig.parent;
			locals.parentPath = "/" + this.folder + "/" + this.themeConfig.parent;
		}
		
		_.extend(locals, req_locals);
		
		this.locals = locals;
	
	}

module.exports = ThemeEngine;