// module setup
	
	// libraries
	var path = require("path"),
		express = require("express"),
		_ = require("underscore");
		
	// peezy modules
	var	fileHelper = require("peezy-file-helper"),
		contentLoader = require("./modules/content-loader.js"),
		themeEngine = require("./modules/theme-engine.js");
		
	var peezy = {};
	
	var test_mode = true;
	
// module init

	peezy.init = function(app_config, cb) {
	
		//test_msg("Initializing App:", app_config);	
	
		// base folders
		
			if (!app_config.appBase) app_config.appBase = path.join(__dirname, "../../");
			if (!app_config.siteFolder) app_config.siteFolder = "site";
			if (!app_config.siteBase) app_config.siteBase = path.join(app_config.appBase, app_config.siteFolder);
			
		// get site config
		
			var site_config = require(path.join(app_config.siteBase, "site.json"));			
			//test_msg("Loading Site:", site_config);
	
		// build vars
	
			// build folders object
			var folders = app_config.folders;
			
			// build paths object	
			var paths = {};	
			
			paths.themesBase = path.join(app_config.siteBase, folders.themes);
			paths.contentBase = path.join(app_config.siteBase, folders.content);
			paths.publicBase = path.join(app_config.siteBase, folders.public);

			paths.themes = "/" + folders.themes;
			paths.themes_rel = "/" + app_config.folders.themes;
			
			paths.homepage = path.join(paths.contentBase, site_config.homepage);	
			paths.error = path.join(paths.contentBase, site_config.error);
									
		// load content and themes
		
			var pages = contentLoader.getPages(paths.contentBase);
			
			themeEngine.init(app_config.siteBase, folders.themes);
			
		// express setup
			
			// instantiate express
			var app = express();
			var port = process.env.PORT || app_config.port;
			
			// set view engine
			app.set("view engine", "ejs");
			
			// serve theme static files
			app.use(paths.themes_rel, express.static(paths.themesBase));	
		
			// serve root static files
			app.use("/", express.static(paths.publicBase));
	
		// routing
		
			var router = express.Router();
			
			// index			
			router.get("/", function(req, res) {
				// render homepage
			    renderTemplate(site_config.homepage, req, res);
			});
			
			// pages
			router.get(/^\/((?:[^\/]+\/?)+)\/?/, function(req, res) {					
			
				var slug = req.params[0];
				// remove optional trailing slash
				if(slug.substr(-1) === '/') slug = slug.substr(0, slug.length - 1);
				
				// TODO check if page exists
				
				// render requested page
				renderTemplate(slug, req, res);
				
			});
				
			// apply routes
			app.use('/', router);
				
			// default route				
			app.use(function(req, res){
				// render error page
				renderTemplate(site_config.error, req, res);
			});				
		
			// start server
			app.listen(port);
				
			// optional callback	
			if (cb) cb();
			
		// functions
		
			function renderTemplate(slug, req, res) {
			
				// get status
				
					var status = 200;
				
					if (!pages[slug] || slug == site_config.error) {
						slug = site_config.error;
						status = 404;
					}
			
				// setup theme
			
					// set theme
					themeEngine.setTheme(site_config.theme, req.query);	
					app.set("views", themeEngine.themeBase);							

					// build locals
					var req_locals = {
						"slug": slug,
						"content": pages[slug].content,
						"template": "index"
					};
										
					themeEngine.buildLocals(site_config, req_locals);

				// render view
				
					res.status(status).render("index.ejs", themeEngine.locals);
			
			}
			
	}
	
	module.exports = peezy;