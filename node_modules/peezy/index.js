	
	var path = require("path"),
		express = require("express"),
		fileHelper = require("peezy-file-helper"),
		_ = require("underscore");
	
	var peezy = {};
	
	var test_mode = true;
	
// module init

	peezy.init = function(app_config, cb) {
	
		// get site config
		
			var site_config = require(path.join(app_config.dirname, app_config.folder, "/site.json"));
	
		// build vars
	
			// build folders object
			var folders = {};
			
			for (sub in app_config.subfolders) {
				folders[sub] = path.join(app_config.folder, app_config.subfolders[sub]);
			}
			
			// build paths object	
			var paths = {};	
			
			paths.themes = "/" + folders.themes;
			paths.themes_abs = path.join(app_config.dirname, folders.themes);
			paths.themes_rel = "/" + app_config.subfolders["themes"];
			
			paths.content = path.join(folders.content);
			paths.homepage = path.join(paths.content, site_config.homepage);	
			paths.error = path.join(paths.content, site_config.error);
			
			paths.public_abs = path.join(app_config.dirname, folders.public);
		
			// other vars
			var test_mode = true;
			
		// express setup
			
			// instantiate express
			var app = express();
			var port = process.env.PORT || app_config.port;
			
			// set view engine
			app.set("view engine", "ejs");
			
			// serve theme static files
			app.use(paths.themes_rel, express.static(paths.themes_abs));	
		
			// serve root static files
			app.use("/", express.static(paths.public_abs));	
	
		// routing
		
			var router = express.Router();
			
			// index
			
				router.get("/", function(req, res) {
					req.slug = site_config.homepage;
				    renderTemplate("index", req, res);
				});
			
			// pages

				router.get(/^\/((?:[^\/]+\/?)+)\/?/, function(req, res) {					
				
					var slug = req.params[0];
	
					// remove optional trailing slash
					if(slug.substr(-1) === '/') slug = slug.substr(0, slug.length - 1);
					
					// set slug and render template
					req.slug = slug;					
					renderTemplate("index", req, res);
					
				});
				
			// apply routes
			
				app.use('/', router);
				
			// default route
				
				app.use(function(req, res){
				   test_msg("404");
				   res.send(404);
				});				
		
			// start server
			
				app.listen(port);
				
			// optional callback	
				
				if (cb) cb();
			
		// functions
		
			function loadTheme(theme) {

				// set vars
				paths.theme = path.join(folders.themes, theme);
				paths.theme_abs = path.join(app_config.dirname, paths.theme);
								
				// load folder
				app.set("views", paths.theme_abs);							
				
			}
		
			function renderTemplate(template, req, res) {
			
				// setup
			
					var render_theme;
					
					// if theme override
					if (req.query.theme) render_theme = req.query.theme;
					else render_theme = site_config.theme;
					
					// set internal vars
					var theme_path = paths.themes_rel + "/" + render_theme;
					var theme_path_abs = path.join(paths.themes_abs, render_theme);
					
					// load theme
					loadTheme(render_theme);
					
					// load theme config
					var theme_config = require(path.join(theme_path_abs, "theme.json"));
					
					// if template or inc override
					
					if (template_override(req.query)) template = template_override(req.query);
						
					// build locals
					var locals = _.clone(site_config);	
					
					locals.theme = render_theme;
					locals.themePath = theme_path;
					locals.slug = req.slug;
					locals.template = template;
									
					// if parent theme
					if (theme_config.parent) {
						// set parent locals
						locals.parent = theme_config.parent;
						locals.parentPath = paths.themes_rel + "/" + theme_config.parent;
					}
					
					// get content
					locals.content = getContent(req.slug);
					
				// render view
					
					if (test_mode) console.log(req.slug);
	
					res.render(template, locals);
				
				// helpers
				
					function template_override(query) {
						if (query.inc && template_exists("inc/" + query.inc)) return ("inc/" + query.inc);
						else if (query.template && template_exists(query.template)) return query.template;
						return false;
						
					}
					
					function template_exists(slug) {
						var filepath = path.join(theme_path_abs, slug + ".ejs");
						console.log(filepath);
						if (fileHelper.exists(filepath)) return true;
						else return false;
					}			
				
					function getContent(slug) {
					
						var filepath = path.join(paths.content, slug);
						var error = path.join(paths.content, site_config.error);
					
						if (fileHelper.exists(filepath + ".html")) return fileHelper.readSync(filepath);
						else return fileHelper.readSync(error);
							
					}				
			
			}
			
	}
	
	module.exports = peezy;