/* setup */

	var fileExists = require("exists-file"),
		fs = require("fs"),
		recursiveReadSync = require("recursive-readdir-sync"),
		path = require("path");

	var fileHelper = {};

/* readSync */	
	
	fileHelper.import = function(filepath) {
		
		// if file exists, return its contents
		if (this.exists(filepath)) return fs.readFileSync(filepath, "utf8");
		else return false;
				
	}
	
/* readSync */	
	
	fileHelper.readSync = function(filepath) {
		
		// list file formats
		
			var file_formats = [".html"];

		// for each file format	
		
			for (i = 0; i < file_formats.length; i++) {
			
				// if file exists, return its contents
				if (this.exists(filepath + file_formats[i])) return fs.readFileSync(filepath + file_formats[i], "utf8");
			
			}	

		// else return false
		return false;
				
	}
	
/* exists */	
	
	fileHelper.exists = function(files) {
	
		// if given an array
		if (typeof files == "object") {
			// check each element
			for (var key in files) {
				if (!fileExists(files[key])) return false;
			}
			return true;
		}
			
		// if given single file	
		else return fileExists(files);
		
	}
	
/* get recursive files */
		
	fileHelper.getFilesRecursive = function(folderpath) {
		
		var files;
		 
		try {
		  files = recursiveReadSync(folderpath);
		} catch(err){
		  if(err.errno === 34){
		    console.log('Path does not exist');
		  } else {
		    //something unrelated went wrong, rethrow 
		    throw err;
		  }
		}
		 
		return files;
	
	}	
	
/* get folders */

	fileHelper.getFolders = function(folderpath) {
	
  		return fs.readdirSync(folderpath).filter(function(file) {
    		return fs.statSync(path.join(folderpath, file)).isDirectory();
  		});
	
	}

	module.exports = fileHelper;